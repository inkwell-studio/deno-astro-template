---
import { ThemeToggle } from '@components/theme-toggle';
import '../global-styles.css';

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const secondsPerWeek = 604800;
Astro.response.headers.set('Cache-Control', `max-age=${secondsPerWeek}`);
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <link rel="canonical" href={canonicalURL} />
        <meta name="description" content="TODO (Polypane recommends keeping this above 50 characters)" />

        <meta name="theme-color" content="#1F293B" />
        <meta name="color-scheme" content="light dark" />

        <!-- The favicon files were generated with [RealFaviconGenerator](https://realfavicongenerator.net/) [v0.16](https://realfavicongenerator.net/change_log#v0.16) -->
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#2d89ef" />
        <meta name="theme-color" content="#ffffff" />

        <!-- This script is necessary to prevent a flash of the inaccurate theme being applied. It must be included inline within the <head> element to function properly.
             The logic and constant values here must be kept in sync with those of `source/logic/theme.ts`. -->
        <script is:inline>
            (() => {
                const theme = globalThis.localStorage.getItem('theme');
                if (
                    'DARK' === theme ||
                    ('SYSTEM' === theme &&
                        globalThis.matchMedia('(prefers-color-scheme: dark)')
                            .matches)
                ) {
                    document.documentElement.classList.add('dark');
                }
            })();
        </script>
        <script>
            import { watchForThemeChanges } from '@logic/store';
            watchForThemeChanges();
        </script>
        <script src="/htmx.min.js" is:inline></script>
    </head>
    <body class="bg-stone-200 text-stone-900 dark:bg-slate-800 dark:text-slate-200">
        <slot />

        <div
            class="fixed bottom-12 right-12 opacity-20 hover:opacity-100 bg-stone-100 dark:bg-slate-900 border border-stone-400 dark:border-slate-500 p-4 rounded transition-opacity delay-100 hover:delay-0"
        >
            <section>
                <h2>Theme</h2>
                <div class="mb-4">
                    <span class="font-bold">Mode: </span>
                    <span class="hidden dark:inline">Dark</span>
                    <span class="dark:hidden">Light</span>
                </div>
                <ThemeToggle client:load />
            </section>
        </div>
    </body>
</html>
